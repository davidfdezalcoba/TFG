#version 400 core
in vec2 vTexCoords;
in vec3 vNormal;
in vec3 vFragPos;

out vec4 fFragColor;

uniform sampler2D texture_diffuse1;
uniform vec3 uLightPos;
uniform vec3 uLightColor;
uniform vec3 uViewPos;
uniform mat3 uNormalMatrix;

void main()
{    
	vec3 ambient = 0.1 * uLightColor;	
	vec3 norm = normalize(uNormalMatrix * vNormal);
	vec3 lightDirection = normalize(uLightPos - vFragPos);
	vec3 diffuse = max(dot(norm, lightDirection), 0.0) * uLightColor;

	vec3 light = ambient + diffuse;
    fFragColor = texture(texture_diffuse1, vTexCoords);
	fFragColor = vec4(light, 1.0) * fFragColor;
}
