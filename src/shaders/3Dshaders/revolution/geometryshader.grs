#version 400 core
#extension GL_EXT_geometry_shader4: enable

layout( lines ) in;
layout( triangle_strip, max_vertices=256 ) out;

uniform mat4 uModel;
uniform mat4 uView;
uniform mat4 uProjection;
uniform int uNum;
const float PI = 3.1415926;

void main(){

	for( int i  = 0; i <= uNum; i++){
		float grados = 2.0*PI / uNum * i;

		gl_Position = gl_in[0].gl_Position;
        gl_Position.x = cos(grados)*gl_PositionIn[0].x + sin(grados)*gl_PositionIn[0].z;
        gl_Position.z = cos(grados)*gl_PositionIn[0].z - sin(grados)*gl_PositionIn[0].x;
		gl_Position = uProjection * uView * uModel * gl_Position;
		EmitVertex( );

		gl_Position = gl_PositionIn[1];
        gl_Position.x = cos(grados)*gl_PositionIn[1].x + sin(grados)*gl_PositionIn[1].z;
        gl_Position.z = cos(grados)*gl_PositionIn[1].z - sin(grados)*gl_PositionIn[1].x;
		gl_Position = uProjection * uView * uModel * gl_Position;
		EmitVertex( );
	}

	EndPrimitive();

}
	
