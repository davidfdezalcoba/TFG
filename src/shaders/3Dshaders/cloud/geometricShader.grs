#version 400 core
#extension GL_EXT_geometry_shader4: enable

layout( triangles ) in;
layout( triangle_strip, max_vertices=3 ) out;

uniform float uShrink;
uniform mat4 uModelViewProjectionMatrix;

in vec3 vNormal[3];
in vec2 vTexCoords[3];

out float gLightIntensity;
out vec2 gTexCoords;

const vec3 LIGHTPOS = vec3( 0., 10., 0. );

vec3 V[3];
vec3 CG;

void ProduceVertex( int vi ) {
 	gLightIntensity = dot( normalize(LIGHTPOS - V[vi]), vNormal[vi] );
	gLightIntensity = abs( gLightIntensity );
	gTexCoords = vTexCoords[vi];
	gl_Position = uModelViewProjectionMatrix * vec4( CG + uShrink * ( V[vi] - CG ), 1. );
	EmitVertex( );
}

void main( ) {
	V[0] = gl_PositionIn[0].xyz;
	V[1] = gl_PositionIn[1].xyz;
	V[2] = gl_PositionIn[2].xyz;
	CG = ( V[0] + V[1] + V[2] ) / 3.;
	ProduceVertex( 0 );
	ProduceVertex( 1 );
	ProduceVertex( 2 );
	// EndPrimitive();
}
